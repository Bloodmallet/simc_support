# This workflow will install Python dependencies, run tests and lint with a variety of Python versionspython@v4
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CD

on:
  push:
    tags:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black pytest pytest-cov mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Style with black
      run: |
        # stop the build if there are style errors
        black .
    - name: Type checking with mypy
      run: |
        mypy .
    - name: Test with pytest
      run: |
        pytest --doctest-modules --junitxml=junit/test-results.xml --cov=simc_support --cov-report=xml --cov-report=html

  publish:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U build twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build
      run: |
        python -m build
    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m twine upload dist/*

  merge:
    needs: [publish]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Merge branch -> master
      uses: devmasx/merge-branch@master
      with:
        type: now
        target_branch: master
        github_token: ${{ github.token }}
        message: '[CD] merge published code into master'
